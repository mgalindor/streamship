server.shutdown=graceful
spring.profiles.active=blocking

spring.jmx.enabled=false

# Jackson
spring.jackson.default-property-inclusion=non_empty
spring.jackson.visibility.field=any
spring.jackson.visibility.getter=none
spring.jackson.visibility.setter=none
spring.jackson.visibility.is-getter=none

# Actuator
management.endpoints.jmx.exposure.exclude=*
management.endpoints.web.exposure.include=health,info,metrics,prometheus,liquibase,env
management.info.git.enabled=true
management.info.java.enabled=true
management.info.os.enabled=true
management.info.env.enabled=true

info.app.name=${spring.application.name}
info.app.java.version=17
info.app.type=Spring Boot
info.app.env=dev

management.endpoint.env.show-values=when-authorized
management.endpoint.health.show-components=when-authorized
management.endpoint.health.show-details=when-authorized

# Security raw pa55word
spring.security.user.name=user
spring.security.user.password={bcrypt}$2a$10$FtdOZOenYTOoNerQ3JPxNuAesG73PhkMjhPj578EUlM/1lJJV4Ypm

# Schema Client
spring.cloud.stream.schemaRegistryClient.endpoint=http://localhost:8081/

# Stream
#spring.cloud.stream.defaultBinder=kafka
#spring.kafka.bootstrapServers=localhost:9092
spring.cloud.stream.kafka.binder.brokers=localhost:9092
spring.cloud.function.definition=producer;consumer
spring.cloud.stream.default.contentType=application/*+avro
spring.cloud.stream.default.consumer.useNativeEncoding=true
spring.cloud.stream.default.producer.useNativeEncoding=true

## Producer
spring.cloud.stream.bindings.producer-out-0.destination=device
spring.cloud.stream.bindings.producer-out-0.producer.poller.fixed-delay=10
spring.cloud.stream.bindings.producer-out-0.producer.poller.timeUnit=SECONDS
spring.cloud.stream.bindings.producer-out-0.producer.poller.maxMessagesPerPoll=1

spring.cloud.stream.kafka.bindings.producer-out-0.producer.configuration.key.serializer=org.apache.kafka.common.serialization.StringSerializer
spring.cloud.stream.kafka.bindings.producer-out-0.producer.configuration.value.serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.cloud.stream.kafka.bindings.producer-out-0.producer.configuration.schema.registry.url=http://localhost:8081

## Consumer
spring.cloud.stream.bindings.consumer-in-0.destination=device
spring.cloud.stream.bindings.consumer-in-0.group=space

spring.cloud.stream.kafka.bindings.consumer-in-0.consumer.enableDlq=true
spring.cloud.stream.kafka.bindings.consumer-in-0.consumer.configuration.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.cloud.stream.kafka.bindings.consumer-in-0.consumer.configuration.value.deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.cloud.stream.kafka.bindings.consumer-in-0.consumer.configuration.schema.registry.url=http://localhost:8081
spring.cloud.stream.kafka.bindings.consumer-in-0.consumer.configuration.specific.avro.reader=true


# Logs
#logging.level.org.springframework.cloud=DEBUG
#logging.level.org.springframework.integration=DEBUG